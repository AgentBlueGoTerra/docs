(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{410:function(a,t,s){"use strict";s.r(t);var e=s(5),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"account"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#account"}},[a._v("#")]),a._v(" Account")]),a._v(" "),s("h2",{attrs:{id:"get-tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-tokens"}},[a._v("#")]),a._v(" Get Tokens")]),a._v(" "),s("p",[a._v("The best way to get tokens is from the "),s("a",{attrs:{href:"https://faucet.terra.money",target:"_blank",rel:"noopener noreferrer"}},[a._v("Terra Testnet Faucet"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"query-account-balance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query-account-balance"}},[a._v("#")]),a._v(" Query Account Balance")]),a._v(" "),s("p",[a._v("After receiving tokens to your address, you can view your account's balance by typing:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli query account "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("terra-account"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("Where "),s("code",[a._v("<terra-account>")]),a._v(" is your "),s("RouterLink",{attrs:{to:"/terracli/keys.html#account-address-terra"}},[a._v("Account Address")]),a._v(".")],1),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("NOTE")]),a._v(" "),s("p",[a._v("When you query an account balance with zero tokens, you will get this error:")]),a._v(" "),s("p",[s("code",[a._v("No account with address <terra-account> was found in the state")]),a._v(".")]),a._v(" "),s("p",[a._v("This can also happen if you fund the account before your node has fully synced with the chain.\nBoth cases are to be expected.")])]),a._v(" "),s("h2",{attrs:{id:"send-tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#send-tokens"}},[a._v("#")]),a._v(" Send Tokens")]),a._v(" "),s("p",[a._v("The following command is used to send coins from one account to another:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli tx send "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("from_key_or_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("to_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("coins"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --chain-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("chain_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n")])])]),s("p",[a._v("where "),s("code",[a._v("to_address")]),a._v(" is an account address.")]),a._v(" "),s("p",[a._v("The "),s("code",[a._v("<coins>")]),a._v(" parameter is a comma-separated list of coins specified as "),s("code",[a._v("<value><coin_denom>")]),a._v(". For instance, "),s("code",[a._v("1000usdr")]),a._v(" or "),s("code",[a._v("1000uluna,1000usdr")]),a._v(".")]),a._v(" "),s("p",[a._v("The "),s("code",[a._v("<from_key_or_address>")]),a._v(" parameter accepts either the key name or the address as possible values, but will only accept addresses when the "),s("code",[a._v("--generate-only")]),a._v(" flag is used.")]),a._v(" "),s("p",[a._v("Now, view the updated balances of the sender and recipient accounts:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli query account "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("sender-account"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n$ terracli query account "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("recipient-account"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("You can also check your balance at a given block by using the "),s("code",[a._v("--height")]),a._v(" flag:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli query account "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("sender-account"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" --height"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("block-height"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("You can simulate a transaction without actually broadcasting it by appending the "),s("code",[a._v("--dry-run")]),a._v(" flag to the command line:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli tx send "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("from_key_or_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("to_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("coins"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --chain-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("chain_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --dry-run\n")])])]),s("p",[a._v("Furthermore, you can build a transaction and print its JSON format to STDOUT by appending "),s("code",[a._v("--generate-only")]),a._v(" to the list of the command line arguments. This allows you to separate the creation and signing of a transaction with the broadcasting.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli tx send "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("from_key_or_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("to_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("coins"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --chain-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("chain_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --generate-only "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" unsignedSendTx.json\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli tx sign "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --chain-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("chain_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --from"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    unsignedSendTx.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" signedSendTx.json\n")])])]),s("p",[a._v("You can validate the transaction's signatures by typing the following:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli tx sign --validate-signatures signedSendTx.json\n")])])]),s("p",[a._v("You can broadcast the signed transaction to a node by providing the JSON file to the following command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ terracli tx broadcast --node"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("node"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" signedSendTx.json\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);